@model IEnumerable<Student_Management_Final_proj.Models.Student>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<h1>Manage Students</h1>

@if (SignInManager.IsSignedIn(User) && User.IsInRole("course_admin"))
{
<p>
    <a class="btn btn-success" asp-action="Create">Create New</a>
</p>
}
<table class="table table-striped table-success">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.StudentRegistrationId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StudentRegistrationId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>

                <a class="btn btn-success" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a class="btn btn-success" asp-action="Details" asp-route-id="@item.Id">Details</a>

                @if (SignInManager.IsSignedIn(User) && User.IsInRole("course_admin"))
                {
                    <a class="btn btn-success" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }
            </td>
        </tr>
        }
    </tbody>
</table>
